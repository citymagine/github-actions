# .github/workflows/action-back-deploy.yml
name: Deploy
on:
  workflow_call:
    inputs:
      release-tag:
        description: docker tag of the release to deploy
        type: string
        required: true
      appname:
        description: "Name of the app. Used in URL"
        type: string
        required: true
      environment:
        default: dev
        description: "Which environment would you like to deploy on ?"
        required: true
        type: string

jobs:
  deployment:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v1
      - name: 'Deploy on dev'
        uses: glopezep/helm@v1.7.1
        if: inputs.environment == 'dev'
        with:
          release: '${{inputs.appname}}'
          namespace: '${{inputs.environment}}'
          chart: './deployment/helm'
          token: '${{ github.token }}'
          value-files: "./deployment/helm/values.yaml"
          version: ${{ inputs.release-tag }}
          values: |
            {
                "image": {
                    "tag": "${{ inputs.release-tag }}"
                },
                ${{secrets.DEV_VALUES}}
            }
          helm: "helm3"
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
      - name: 'Deploy on devAws'
        uses: glopezep/helm@v1.7.1
        if: inputs.environment == 'devAws'
        with:
          release: '${{inputs.appname}}'
          namespace: '${{inputs.environment}}'
          chart: './deployment/helm'
          token: '${{ github.token }}'
          value-files: "./deployment/helm/values.yaml"
          version: ${{ inputs.release-tag }}
          values: |
            {
                "image": {
                    "tag": "${{ inputs.release-tag }}"
                },
                ${{secrets.DEV_AWS_VALUES}}
            }
          helm: "helm3"
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG_DEV_AWS }}'
      - name: 'Deploy on production'
        uses: glopezep/helm@v1.7.1
        if: inputs.environment == 'prod'
        with:
          release: '${{inputs.appname}}'
          namespace: '${{inputs.environment}}'
          chart: './deployment/helm'
          token: '${{ github.token }}'
          value-files: "./deployment/helm/values.yaml"
          version: ${{ inputs.release-tag }}
          values: |
            {
                "image": {
                    "tag": "${{ inputs.release-tag }}"
                },
                ${{secrets.PROD_VALUES}}
            }
          helm: "helm3"
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG_PROD }}'
